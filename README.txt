Harnessing Large Language Models: A Comparative approach with human analysis

1. ComparisonMetrics_For_Thematic_analysis1.ipynb

Notebook Overview:

This python notebook provides a framework for:

- Generating a summary of an interview transcript using the LLaMA model.
- Extracting key codes that represent significant parts of the conversation.
- Identifying themes and sub-themes from the codes.
- Evaluating the similarity between the themes generated by the LLM and those provided by a researcher using various similarity metrics (e.g., Cohen's Kappa, Jaccard, Precision, Recall, F1 score).

Installation

To use this project, ensure that you have the necessary dependencies installed.

Required Libraries:
- transformers
- pydantic
- sklearn
- pandas
- nltk

Access Tokens for LLaMA 2 Model:
- You'll need an access token for the Hugging Face model hub. Replace the access_token in the code with your own.

Usage

Input
- The code takes in a text file containing an interview transcript.

Output
The output includes:

- A text file summarising the transcript, with identified codes, themes, and sub-themes.
- A detailed comparison of themes between the LLM and a human researcher.
- Metrics such as Cohen's Kappa, precision, recall, F1 score, and Jaccard similarity.

Metrics and Evaluation
Once themes and sub-themes are generated by both the LLM and the researcher, they are compared using the following metrics:

- Cohen's Kappa Score: Measures the agreement between the two sets of sub-themes (LLM and researcher). 
- Accuracy: Measures how accurately the LLM-generated themes align with the researcher's themes.
- Jaccard Similarity: Measures the similarity between the binary representations of the LLM and researcher's themes.
- Precision, Recall, and F1 Score: Provide additional metrics to evaluate how well the LLM-generated themes match those of the researcher.



2. TA_with_Temparature.ipynb


Notebook Overview:

This python notebook provides a framework for:

- Generating a summary of an interview transcript using the LLaMA model.
- Extracting key codes that represent significant parts of the conversation.
- Identifying themes and sub-themes from the codes.
- The temperature parameter is emphasised in this python notebook, allowing to control the randomness and creativity of the modelâ€™s output during text generation.

Installation and usage is all same as the above notebook.


Dataset used:

The interview transcripts used in this analysis are sourced from the ASAP Sports website, specifically from the Recent Interviews section. Selected sports interview scripts are downloaded and compiled into text files. These text files are then uploaded to the Python notebook for further pre-processing, thematic analysis, and code generation.